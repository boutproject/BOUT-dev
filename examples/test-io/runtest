#!/usr/bin/env python

# 
# Run the test, compare results against the benchmark
#

from boututils import shell,launch,getmpirun
from boutdata import collect
import numpy as np
from sys import stdout, exit

MPIRUN=getmpirun()

print "Making I/O test"
shell("make > make.log")

# Read benchmark values

vars = ['ivar', 'rvar', 'f2d', 'f3d', 'ivar_evol', 'rvar_evol', 'v2d_evol_x', 'v2d_evol_y', 'v2d_evol_z']

tol = 1e-10

print "Reading benchmark data"
bmk = {}
for v in vars:
  bmk[v] = collect(v, path="data", prefix="benchmark.out", info=False)

print "Running I/O test"
success = True
for nproc in [1,2,4]:
  cmd = "./test_io"

  # On some machines need to delete dmp files first
  # or data isn't written correctly
  shell("rm data/BOUT.dmp.*.nc") 
  
  # Run test case
  
  print "   %d processor...." % (nproc)
  s, out = launch(cmd, runcmd=MPIRUN, nproc=nproc, pipe=True)
  f = open("run.log."+str(nproc), "w")
  f.write(out)
  f.close()

  # Collect output data
  for v in vars:
    stdout.write("      Checking variable "+v+" ... ")
    result = collect(v, path="data", info=False)
    # Compare benchmark and output
    if np.shape(bmk[v]) != np.shape(result):
      print "Fail, wrong shape"
      success = False
      continue
    diff =  np.max(np.abs(bmk[v] - result))
    if diff > tol:
      print "Fail, maximum difference = "+str(diff)
      success = False
    else:
      print "Pass"
  
if success:
  print " => All I/O tests passed"
  exit(0)
else:
  print " => Some failed tests"
  exit(1)
