#!/usr/bin/env python

#
# Run the test, check it completed successfully
#

from __future__ import print_function
try:
  from builtins import str
except:
  pass
from boututils.run_wrapper import shell, launch, getmpirun
from boutdata.collect import collect
from sys import stdout, exit

MPIRUN=getmpirun()

print("Making FieldIterator test")
s, out = launch("make > make.log",pipe=True)
if s:
  print("Failed to run make")
  exit(s);

flags = [""]
#, "nsys=2", "nsys=5 periodic", "nsys=7 n=10"]

code = 0 # Return code
for nproc in [1,2,4]:
  for mproc in [1,2,4,8]:
    cmd = "./test_fielditerator"

    print("   %d processors...." % (nproc))
    r = 0
    for f in flags:
        stdout.write("\tflags '"+f+"' ... ")

        shell("rm data/BOUT.dmp.* 2> err.log")

        # Run the case
        s, out = launch(cmd+" "+f, runcmd=MPIRUN, nproc=nproc, pipe=True)
        f = open("run.log."+str(nproc)+"."+str(r), "w")
        f.write(out)
        f.close()
        r = r + 1
        if s:
          stdout.write(out)
          code=1
          print("FAILED")
        else:
          
          # Find out if it worked
          #allpassed = collect("allpassed", path="data", info=False)
          #if allpassed:
          print("PASSED")
          #else:
          #  print("FAILED")
          #  code = 1

if code == 0:
    print(" => All field iteration tests passed")
else:
    print(" => Some failed tests")

exit(code)
