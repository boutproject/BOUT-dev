# settings file for BOUT++ UEDGE benchmark test

##################################################
# settings used by the core code

nout = 400       # number of time-steps
timestep = 1000.0   # time between outputs

twistshift = false  # use twist-shift condition?

MZ = 2     # number of points in z direction (2^n + 1)
ZMIN = 0.0
ZMAX = 0.05546

MXG = 2
MYG = 2

grid = "uedge.grd_Up_Ni_Tei_2d.nc"

##################################################
# derivative methods

[mesh:ddx]

first = C2  # order of first x derivatives (options are 2 or 4)
second = C2 # order of second x derivatives (2 or 4)
upwind = U1 # order of upwinding method (1, 4, or 0 = TVD)

[mesh:ddy]

first = C4
second = C2
upwind = U1

[mesh:ddz]

first = C4
second = C4
upwind = U1

##################################################
# Solver settings

[solver]

# mudq, mldq, mukeep, mlkeep preconditioner options
mxstep = 5000 # Maximum number of internal steps
atol = 1e-10 # absolute tolerance
rtol = 1e-05  # relative tolerance

##################################################
# settings for uedge model

[uedge]

AA = 2.0
ZZ = 1.0

chi_perp = 0.6

##################################################
# settings for individual variables
# The section "All" defines default settings for all variables
# These can be overridden for individual variables in
# a section of that name.

[all]
scale = 0.0 # default size of initial perturbations
function = gauss(x - 0.5, 0.5) * sin(y) * mixmode(z)

# boundary conditions
# -------------------
# dirichlet      = zero value
# dirichlet(val) = Fix at val
# neumann        = zero gradient
# zerolaplace    = Laplacian = 0, decaying solution
# constlaplace   = Laplacian = 0, decaying solution
#
# Regions: core, pf, sol, target
#          xin, xout, ydown, yup, all
#
# All boundaries can be made relaxing e.g.
#    "relax(dirichlet(1.))" will relax towards 1
# To specify a relaxation rate (1/timescale), pass an argument to relax:
#    "relax(dirichlet(1.), 10)" sets the rate to 10. (the default).
#
# NOTE: The boundary quantities are normalised to
#       the values set in the grid file:
# Te_x = 10 eV
# Ni_x = 1.e13 cm^-3
# Vi_x = 21850.0 cm/s  NB: Depends on bmag, Te_x, AA and ZZ

bndry_all = neumann # Default for all variables, boundaries

[Ni]

bndry_target = neumann
bndry_core = relax(dirichlet(1.))   # 1e13 cm^-3 on core boundary
bndry_all = relax(dirichlet(0.1))  # 1e12 cm^-3 on all other boundaries

[Vi]

bndry_core = neumann
bndry_pf = neumann
bndry_sol = neumann
bndry_ydown = relax(dirichlet(-1.41648))   # -3.095e4/Vi_x
bndry_yup = relax(dirichlet( 1.41648))

[Te]

bndry_core = relax(dirichlet(10.)) # 100eV / Te_x on core boundary
bndry_all = relax(dirichlet(1.))  # Relax to 10.eV / Te_x on other boundaries

[Ti]

bndry_core = relax(dirichlet(10.))
bndry_all = relax(dirichlet(1.))
