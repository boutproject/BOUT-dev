# settings file for BOUT++ 2-fluid model
# As far as possible, the names used here are the same
# as those used in the BOUT-06 input file

##################################################
# settings used by the core code

NOUT = 200     # number of time-steps
TIMESTEP = 1.e0   # time between outputs

TwistShift = true  # use twist-shift condition?

MZ = 64     # number of points in z direction (2^n)

ZPERIOD = 20 # Fraction of a torus

MXG = 2
MYG = 2

grid="uedge.grd.nc"
twistshift_pf = true # Grid has twist-shift in PF region

dump_format = "nc"   # Set extension for dump files (nc = NetCDF)

[mesh:paralleltransform]
type = shifted  # Use shifted metric method

##################################################
# derivative methods

[mesh:ddx]

first = C4
second = C4
upwind = W3

[mesh:ddy]

first = C4
second = C4
upwind = W3

[mesh:ddz]

first = C4
second = C4
upwind = W3

##################################################
# Laplacian inversion settings

[laplace]
all_terms = false
laplace_nonuniform = true
filter = 0.2   # Remove the top 20% of modes (BOUT-06 zwindow=0.4)

##################################################
# Solver settings

[solver]

# mudq, mldq, mukeep, mlkeep preconditioner options
ATOL = 1.0e-10 # absolute tolerance
RTOL = 1.0e-5  # relative tolerance
mxstep = 50000

##################################################
# settings for 2fluid

[2fluid]

nu_perp = 1.0e-20

bkgd = 2    # Profile option for coefficients (ni, mu_i etc.)
iTe_dc = 1  # Profile evolution option

AA = 2.0           # Ion mass
ZZ = 1.0           # Ion charge
Zeff = 2.0         # Z effective

estatic = true     # if true, electrostatic (Apar = 0). (BOUT-06 = esop)
ZeroElMass = true  # Use Ohms law without electron inertia
bout_jpar = false   # Use BOUT-06 method to calculate ZeroElMass jpar 

stagger = true     # Use CtoL and LtoC parallel differencing

# Form to use for the ExB advection (Poisson bracket) terms
bracket_method = 1 # 0 = full terms, 1 = simplified (BOUT-06), 2 = Arakawa, 3 = CTU

curv_upwind = false # Use upwinding for b0xkappa_dot_Grad terms

laplace_extra_rho_term = true # include Grad_perp(Ni) dot Grad_perp(phi) term
vort_include_pi = false # Include Pi term in vorticity (BOUT-06 vortPi)

ShearFactor = 1.0

OhmPe = true   # Include Pe in Ohm's law?

low_pass_z = -1  # Keep n up to (and including) this number

# field inversion flags: Add the following
#  1 - Zero-gradient DC component on inner boundary
#  2 - Zero-gradient AC component on inner boundary
#  4 -      "        DC     "      " outer    "
#  8 -      "        AC     "      " outer    "
# 16 - Zero all DC components of the result
# 32 - Don't use previous solution to start iterations
#      (iterative methods only)
phi_flags = 1  # inversion flags for phi
apar_flags = 0 # flags for apar inversion

##################################################
# settings for individual variables
# The section "All" defines default settings for all variables
# These can be overridden for individual variables in
# a section of that name.

[All]
scale = 0.0 # default size of initial perturbations

# boundary conditions
# -------------------
# dirichlet    - Zero value
# neumann      - Zero gradient
# zerolaplace  - Laplacian = 0, decaying solution
# constlaplace - Laplacian = const, decaying solution
#
# relax( )   - Make boundary condition relaxing

# All variables and all regions to zero-gradient
bndry_all = relax(neumann)

##################################################
# DENSITY
# NOTE: By default all terms are off (false) so
#       any unused options can just be removed

[Ni]
scale = 1.0e-3 # Initial perturbation size

# Form of the initial perturbation
function = ballooning( exp(-((x-0.5)/0.25)^2) * exp(-((y/(2*pi)-0.5)/0.6)^2) * sin(z) )

# ExB advection terms
ni1_phi0 = false
ni0_phi1 = true
ni1_phi1 = true
nit_phit = false

# Parallel advection
vi1_ni0 = false
vi0_ni1 = false
vi1_ni1 = false
vit_nit = false

jpar1 = true  # Div_par(Jpar) linear term
pe1   = false  # b0xkappa_Grad(Pe) linear term
ni1   = false  # Perpendicular ion viscosity

# Ni * b0xkappa_Grad(phi) terms
ni0_curv_phi1 = false
ni1_curv_phi0 = false
ni1_curv_phi1 = false
nit_curv_phit = false

[Vi]
evolve = false

[Te]
evolve = false

[Ti]
evolve = false

##################################################
# VORTICITY

[rho]

bndry_xin = relax(dirichlet)
bndry_xout = relax(dirichlet)

# ExB advection terms
rho0_phi1 = false
rho1_phi0 = false
rho1_phi1 = true

# Parallel advection
vi1_rho0 = false
vi0_rho1 = false
vi1_rho1 = false

pei1 = true   # b0xkappa_Grad(Pei) linear curvature drive
jpar1 = true   # Div_par(Jpar)   linear drive
rho1 = false    # Perpendicular ion viscosity

[jpar]

#bndry_yup = relax(dirichlet)
#bndry_ydown = relax(dirichlet)
