#
# Input file for 1D wave MMS test
#

nout = 20      # Number of output timesteps
timestep = 0.1  #Time between outputs


MZ = 1 # Number of points in z

#number of guard cells
MYG = 2
MXG = 0

[output]
floats = false #false -> output in doubles

[mesh]  

StaggerGrids = true

ixseps1 = -1     
ixseps2 = -1             # Set x location of separatrix 2

#nx = internals gridpoints + guardcells
nx = 1

#ny = internal gridpoints
ny = 16
dy = 0.0625

symmetricGlobalY = true 

##################################################
[mesh:ddx]   # Methods used for perp (x) derivative terms

first = C2
second = C2
upwind = U1
flux = SPLIT

[mesh:ddy]   # Methods used for parallel (y) derivative terms

first = C2
second = C2
upwind = U1
flux = SPLIT

[mesh:ddz]   # Methods used for perp (z) derivative terms

first = C2
second = C2
upwind = U1
flux = SPLIT

[solver] 

mms = true

atol = 1.0e-15 # absolute tolerance
rtol = 1.0e-10  # relative tolerance
mxstep = 10000000

[all]

[f]
solution = y - sin(t)*cos(0.5*y) + cos(y)
ddy      = 0.5*sin(t)*sin(0.5*y) - sin(y) + 1
source   = 0.2*y*sin(0.1*y^2)*cos(t) - 2*y - cos(t)*cos(0.5*y) - cos(y)

bndry_all = neumann_o2(f:ddy)
bndry_yup = dirichlet_o2(f:solution)

[g]
solution = y^2 + sin(y) + cos(t)*cos(0.1*y^2)
ddy      = -0.2*y*sin(0.1*y^2)*cos(t) + 2*y + cos(y)
source   = -0.5*sin(t)*sin(0.5*y) - sin(t)*cos(0.1*y^2) + sin(y) - 1

bndry_all = dirichlet_o2(g:solution)

################################

