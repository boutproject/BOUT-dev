#
# Input file for conduction case
#
nout = 1      # Number of output timesteps
timestep = 1 #Time between outputs

# Number of points in z
MZ = 1
ZMIN = 0.0
ZMAX = 1.0

#number of guard cells
MYG = 1
MXG = 1

dump_format = "nc"     # Write NetCDF format files

[output]
floats = false #false -> output in doubles

[mesh]
ixseps1 = -1
ixseps2 = -1             # Set x location of separatrix 2

#nx = internals gridpoints + guardcells
nx = 4

#ny = internal gridpoints
ny = 1

Lx = 1.0
Ly = 1.0

#grid points are distributed symmetrically
symmetricGlobalX = true

##################################################
[mesh:ddx]   # Methods used for perp (x) derivative terms

first = C2
second = C2
upwind = W3
flux = SPLIT

[mesh:ddy]   # Methods used for parallel (y) derivative terms

first = C2
second = C2
upwind = W3
flux = SPLIT

[mesh:ddz]   # Methods used for perp (z) derivative terms

first = C2
second = C2
upwind = W3
flux = SPLIT


[solver]

type = pvode

mms = true

atol = 1e-15 # absolute tolerance
rtol = 1e-07  # relative tolerance
mxstep = 1000000

[cyto]
Dx = 1
Dy = -1 # No Y conduction
Dz = -1 # No Z conduction

[all]
scale = 1.0

[N]
xl = x * mesh:Lx           # In the range [0,Lx]
yl = y * mesh:Ly 			  # In the range [0,Ly]

solution = 0.9*N:xl + 0.2*sin(5.0*N:xl^2 - 2*z) + sin(7*N:yl + 1.234)*cos(N:yl)*cos(10*z) + 0.9

ddx = 2.0*N:xl*cos(5.0*N:xl^2 - 2*z) + 0.9

ddy = -sin(N:yl)*sin(7*N:yl + 1.234)*cos(10*z) + 7*cos(N:yl)*cos(10*z)*cos(7*N:yl + 1.234)

source = 20.0*N:xl^2*sin(5.0*N:xl^2 - 2*z) - 2.0*cos(5.0*N:xl^2 - 2*z)

bndry_all = dirichlet_o2(N:solution)
bndry_xin = neumann_o2(N:ddx)
