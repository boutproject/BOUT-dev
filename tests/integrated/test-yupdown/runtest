#!/usr/bin/env python3

#requires: all_tests

from boututils.run_wrapper import shell, shell_safe, launch_safe, getmpirun
from boutdata.collect import collect
from sys import stdout, exit

from numpy import max, abs

MPIRUN=getmpirun()

shell_safe("make > make.log")


s, out = launch_safe("./test_yupdown", runcmd=MPIRUN, nproc=1, pipe=True, verbose=True)

with open("run.log", "w") as f:
  f.write(out)

vars = [ ("ddy", "ddy2") ]
for v1, v2 in vars:
  stdout.write("Testing %s and %s ... " % (v1, v2) )
  ddy = collect(v1, path="data", xguards=False, yguards=False, info=False)
  ddy2 = collect(v2, path="data", xguards=False, yguards=False, info=False)

  diff = max(abs(ddy - ddy2))

  if diff < 1e-8:
    print("Passed (Max difference %e)" % (diff))
  else:
    print("Failed (Max difference %e)" % (diff))
    exit(1)
  
exit(0)
